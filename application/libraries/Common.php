<?php if (!defined('BASEPATH')) exit('No direct script access allowed');
/**
 * Copyright 2012 - HMS
 * Created by Huynk on : 8/25/12 - 11:39 AM
 */
class Common
{
    public function __construct($params = array())
    {
        $this->CI =& get_instance();

        $this->CI->load->helper('url');
        $this->CI->load->library('session');
        $this->CI->load->library('user_agent');
    }

    function writeLog($action_name, $description = '')
    {
        $user_ip = $this->CI->input->ip_address();
        if ($user_ip == '::1' || $user_ip == '172.31.72.113') {
            return;
        }

        $fn = $this->CI->config->item('system_log_file');
        $content = file_get_contents($fn);
        $content .= date("d/m/Y:H:i:s;\t");
        $content .= $this->CI->input->ip_address() . "\t";
        if ($this->CI->session->userdata('CURRENT_USER_ID') != '') {
            $content .= $this->CI->session->userdata('CURRENT_USER_NAME') . "(" . $this->CI->session->userdata('CURRENT_USER_ID') . ");\t\t";
        } else {
            $content .= "NULL(Not logged in);\t\t";
        }
        $content .= $action_name . ";\t\t";
        $content .= $description . ";\t\t";
        $content .= 'Using ' . $this->CI->agent->browser() . '. V:' . $this->CI->agent->version() . '. IP:' . ";\t\t";
        $content .= 'Referrer: ' . $this->CI->agent->referrer() . ";\r\n";
        $fp = fopen($fn, "w+") or die ("Error opening file in write mode!");
        fputs($fp, $content);
        fclose($fp);
    }

    /*
     * Write log to database
     */
    function writeLogDb($name, $affected_to, $updated_info = '', $origin_info = '', $action_info = '')
    {
        $this->CI->load->database();

        $objLog = '';

        if ($this->CI->session->userdata('CURRENT_USER_ID') != '') {
            $objLog['actor'] = $this->CI->session->userdata('CURRENT_USER_ID');
        } else {
            $objLog['actor'] = "-1";
        }

        $action_info .= ' IP:' . $this->CI->input->ip_address();

        $objLog['name'] = $name;
        $objLog['affected_to'] = $affected_to;
        $objLog['origin_info'] = $origin_info;
        $objLog['updated_info'] = $updated_info;
        $objLog['action_info'] = $action_info;

        if (!$this->CI->db->insert('logs', $objLog)) {
            die ("Write log to DB error!");
        }
    }

    /*
     * Must use with PHPExcel library (Copy PHPExcel source code into this project)
     */
    function export_excel($query)
    {
        $current_user = $this->CI->session->userdata('CURRENT_USER_NAME');

        if (!$query)
            return false;

        // Starting the PHPExcel library
        $this->CI->load->library('PHPExcel');
        $this->CI->load->library('PHPExcel/IOFactory');

        $objPHPExcel = new PHPExcel();
        $objPHPExcel->getProperties()->setCreator("Nguyen Kim Huy");
        $objPHPExcel->getProperties()->setLastModifiedBy($current_user);
        $objPHPExcel->getProperties()->setTitle("School Management System");
        $objPHPExcel->getProperties()->setSubject("Report");
        $objPHPExcel->getProperties()->setDescription("Generated by " . $current_user . " on" . date("Y-m-d:H:i:s") . ". Developed by Nguyen Kim Huy");

        $objPHPExcel->setActiveSheetIndex(0);

        // Field names in the first row
        $fields = $query->list_fields();
        $col = 0;
        foreach ($fields as $field) {
            $objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($col, 1, $field);
            $col++;
        }

        // Fetching the table data
        $row = 2;
        foreach ($query->result() as $data) {
            $col = 0;
            foreach ($fields as $field) {
                $objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($col, $row, $data->$field);
                $col++;
            }

            $row++;
        }

        $objPHPExcel->setActiveSheetIndex(0);

        $objWriter = IOFactory::createWriter($objPHPExcel, 'Excel5');

        // Sending headers to force the user to download the file
        header('Content-Type: application/vnd.ms-excel');
        header('Content-Disposition: attachment;filename="SchoolReport-' . date('d_M_y:h_i_s') . '.xls"');
        header('Cache-Control: max-age=0');

        $objWriter->save('php://output');
    }

    /*
     * Export file to CSV file
     */
    function export_csv($sourceData, $filename = 'report.csv', $arrColumnTitles = '', $reportTitle = 'SMS Report', $delimiter = ';')
    {
        ob_start();
        $fp = fopen('php://output', 'w');

        $reportFooter = array('Automatically generated from SMS (http://172.31.72.111) on ' . date("Y-m-d H:i:s"), 'Â© Nguyen Kim Huy');

        // Insert data to CSV file
        fputcsv($fp, array($reportTitle), $delimiter);
        fputcsv($fp, $arrColumnTitles, $delimiter);

        foreach ($sourceData as $item) {
            $row = get_object_vars($item);
            fputcsv($fp, $row, $delimiter);
        }
        fputcsv($fp, array(), $delimiter);
        fputcsv($fp, $reportFooter, $delimiter);

        // Set file for download
        header('Content-Type: text/csv; charset=utf-8');
        header('Content-Disposition: attachment; filename=' . $filename);

        fclose($fp);
        exit();
    }

    /**
     * Output an alert message & NO redirect
     */
    function callbackAlertError($statusMsg)
    {
        $callbackScript = "<script>";
        $callbackScript .= "alert('" . $statusMsg . "');";
        $callbackScript .= "</script>";
        echo $callbackScript;
    }

    /**
     * Output an alert message & redirect
     */
    function callbackAlert($statusMsg, $urlRedirect)
    {
        $callbackScript = "<script>";
        $callbackScript .= "alert('" . $statusMsg . "');";
        $callbackScript .= "window.location.href ='" . $urlRedirect . "';";
        $callbackScript .= "</script>";
        echo $callbackScript;
    }

    /**
     * Output confirm dialog message & redirect to appropriate url
     */
    function callbackConfirm($confirmMsg, $urlIfYes, $urlIfNo)
    {
        $callbackScript = "<script>";
        $callbackScript .= "if(confirm('" . $confirmMsg . "')){window.location.href ='";
        $callbackScript .= $urlIfYes;
        $callbackScript .= "';} else {window.location.href ='";
        $callbackScript .= $urlIfNo;
        $callbackScript .= "';}";
        $callbackScript .= "</script>";
        echo $callbackScript;
    }

    /*
     * Upload photo return file_name
     * $photo_group: student | staff
     */
    public function upload_photo($sub_folder = '')
    {
        if($sub_folder != ""){$sub_folder.="/";}
        $status = "";
        $file_field_name = 'photo';

        if ($status != "error") {
            $config['upload_path'] = './photos/'.$sub_folder;
            $config['allowed_types'] = 'jpg|png';
            $config['max_size'] = 500;
            $config['remove_spaces'] = TRUE;
            $this->CI->load->library('upload', $config);

            if (!$this->CI->upload->do_upload($file_field_name)) {
                $status = 'error';
                $msg = $this->CI->upload->display_errors('', '');
            } else {
                $data = $this->CI->upload->data();
                if (1) {
                    $status = "success";
                    $msg = "File successfully uploaded";
                } else {
                    unlink($data['full_path']);
                    $status = "error";
                    $msg = "Something went wrong when saving the file, please try again.";
                }
            }
            @unlink($_FILES[$file_field_name]);
        }
//        echo json_encode(array('status' => $status, 'msg' => $msg));
        return $data['file_name'];
    }
}

/* End of file Common.php */